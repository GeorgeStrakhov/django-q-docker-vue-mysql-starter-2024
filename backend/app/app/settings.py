"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

## Error handling
def raise_error(message):
    raise ValueError(message)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')
DOMAIN = os.getenv('DOMAIN') or raise_error('DOMAIN env variable is not set')
ROOT_DOMAIN = os.getenv('ROOT_DOMAIN') or raise_error('DOMAIN env variable is not set') # IMPORTANT! This is root domain
MAIN_HOST = os.getenv('HOST') or raise_error('HOST env variable is not set')
PROJECT_NAME = os.getenv('PROJECT_NAME') or raise_error('PROJECT_NAME env variable is not set')
CONTACT_EMAIL = os.getenv('CONTACT_EMAIL') or raise_error('CONTACT_EMAIL env variable is not set')
ACCOUNTS_EMAIL = os.getenv('ACCOUNTS_EMAIL') or raise_error('ACCOUNTS_EMAIL env variable is not set')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG') == 'True'
DEVELOPMENT = os.getenv('ENV') == 'development'

ALLOWED_HOSTS = [
   ROOT_DOMAIN,
   DOMAIN,
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders', #For CORS
    'django_q', # queue stuff
    'rest_framework',
    'tasks', # for long running tasks
    'files', # for file uploads
    'accounts',
    'notes',
]

AUTH_USER_MODEL = 'accounts.MyUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware', # For CORS
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "https://"+DOMAIN,
    "http://"+DOMAIN,
    "https://"+ROOT_DOMAIN,
    "http://"+ROOT_DOMAIN,
]

CSRF_TRUSTED_ORIGINS=['https://*.'+ROOT_DOMAIN, 'https://'+ROOT_DOMAIN, 'http://*.'+ROOT_DOMAIN, 'http://'+ROOT_DOMAIN]

CSRF_COOKIE_DOMAIN = "." + DOMAIN

SESSION_COOKIE_SECURE = True

CSRF_COOKIE_SECURE = True

CSRF_COOKIE_NAME = 'csrftoken'

SESSION_COOKIE_AGE = 86420

SESSION_COOKIE_DOMAIN = DOMAIN
SESSION_COOKIE_SAMESITE = 'Lax'  # Or 'Lax' or 'Strict'

ROOT_URLCONF = 'app.urls'

# REST Framework authentication and permission settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(seconds=30) if DEVELOPMENT else timedelta(minutes=15), # keep it short for development to ensure we hit corner cases
    'REFRESH_TOKEN_LIFETIME': timedelta(minutes=90) if DEVELOPMENT else timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE'),
        'USER': os.getenv('MYSQL_USER'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD'),
        'HOST': os.getenv('DB_HOST', 'db'),
        'PORT': os.getenv('DB_PORT', '3306')
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'api/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# queue settings

REDIS_URL = os.getenv('REDIS_URL', 'redis://redis:6379/0')

Q_CLUSTER = {
    'name': 'appqueue',
    'workers': 4,
    'recycle': 500,
    'timeout': 3600,
    'retry': 3700,
    'compress': True,
    'save_limit': 250,
    'queue_limit': 500,
    'cpu_affinity': 1,
    'label': 'Django Q2',
    'redis': REDIS_URL,
    'ALT_CLUSTERS': {
        'long': {
            'timeout': 3000,
            'retry': 3600,
            'max_attempts': 2,
        },
        'short': {
            'timeout': 10,
            'max_attempts': 1,
        },
    },
}
